apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nodejs-backend-template
  title: Create a Node.js Backend application with a CI/CD pipeline
  description: Create a starter Node.js backend application with a CI/CD pipeline
  tags:
    - recommended
    - nodejs
    - javascript
    - typescript
    - express
spec:
  owner: sau-lanvy
  type: service
  parameters:
    - title: Provide information about the new component
      required:
        - orgName
        - repoName
        - owner
        - system
        - port
      properties:
        orgName:
          title: Organization Name
          type: string
        repoName:
          title: Repository Name
          type: string
        description:
          title: Description
          type: string
          description: Help others understand what this component is for
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        system:
          title: System
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - System
        port:
          title: Port
          type: number
          default: 3000
          description: Override the port exposed for the application
    - title: Provide information about the CI method
      required:
        - ci
        - imageRepository
        - namespace
      properties:
        ci:
          title: Select a CI method
          type: string
          description: This action will create a CI pipeline for your application based on chosen method
          default: ../../skeletons/github-actions/
          enum:
            - ../../skeletons/github-actions/
          enumNames:
            - GitHub Action
        imageRepository:
          title: Select a registry
          type: string
        namespace:
          title: Namespace
          type: string
          description: The namespace for deploying resources
                
  steps:
    - id: sourceCodeTemplate
      name: Generating the Source Code Component
      action: fetch:template
      input:
        url: ./skeleton
        values:
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          ci: ${{ parameters.ci }}
          sourceControl: github.com

    - id: manifestTemplate
      name: Generating the Manifest Template
      action: fetch:template
      input:
        url: ../../skeletons/manifests
        values:
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          sourceControl: github.com

    - id: ciTemplate
      name: Generating the CI Component
      action: fetch:template
      input:
        url: ${{ parameters.ci }}
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          ci: ${{ parameters.ci }}
          sourceControl: github.com

    - id: catalogTemplate
      name: Generating the Catalog Info Component
      action: fetch:template
      input:
        url: ../../skeletons/catalog-info/
        values:
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          ci: ${{ parameters.ci }}
          sourceControl: github.com

    - id: publish
      name: Publishing to the Source Code Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.repoName }}
        defaultBranch: main

    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
